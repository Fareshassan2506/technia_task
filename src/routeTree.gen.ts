/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AppImport } from './routes/_app'

// Create Virtual Routes

const SignUpRouteLazyImport = createFileRoute('/sign-up')()
const SignInRouteLazyImport = createFileRoute('/sign-in')()
const IndexLazyImport = createFileRoute('/')()
const AppSettingsRouteLazyImport = createFileRoute('/_app/settings')()
const AppRealEstateRouteLazyImport = createFileRoute('/_app/real-estate')()
const AppLogoutRouteLazyImport = createFileRoute('/_app/logout')()
const AppHrRouteLazyImport = createFileRoute('/_app/hr')()
const AppDashboardRouteLazyImport = createFileRoute('/_app/dashboard')()

// Create/Update Routes

const SignUpRouteLazyRoute = SignUpRouteLazyImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-up/route.lazy').then((d) => d.Route))

const SignInRouteLazyRoute = SignInRouteLazyImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/sign-in/route.lazy').then((d) => d.Route))

const AppRoute = AppImport.update({
  id: '/_app',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const AppSettingsRouteLazyRoute = AppSettingsRouteLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/settings/route.lazy').then((d) => d.Route),
)

const AppRealEstateRouteLazyRoute = AppRealEstateRouteLazyImport.update({
  id: '/real-estate',
  path: '/real-estate',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/real-estate/route.lazy').then((d) => d.Route),
)

const AppLogoutRouteLazyRoute = AppLogoutRouteLazyImport.update({
  id: '/logout',
  path: '/logout',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/logout/route.lazy').then((d) => d.Route),
)

const AppHrRouteLazyRoute = AppHrRouteLazyImport.update({
  id: '/hr',
  path: '/hr',
  getParentRoute: () => AppRoute,
} as any).lazy(() => import('./routes/_app/hr/route.lazy').then((d) => d.Route))

const AppDashboardRouteLazyRoute = AppDashboardRouteLazyImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => AppRoute,
} as any).lazy(() =>
  import('./routes/_app/dashboard/route.lazy').then((d) => d.Route),
)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app': {
      id: '/_app'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AppImport
      parentRoute: typeof rootRoute
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteLazyImport
      parentRoute: typeof rootRoute
    }
    '/_app/dashboard': {
      id: '/_app/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof AppDashboardRouteLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/hr': {
      id: '/_app/hr'
      path: '/hr'
      fullPath: '/hr'
      preLoaderRoute: typeof AppHrRouteLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/logout': {
      id: '/_app/logout'
      path: '/logout'
      fullPath: '/logout'
      preLoaderRoute: typeof AppLogoutRouteLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/real-estate': {
      id: '/_app/real-estate'
      path: '/real-estate'
      fullPath: '/real-estate'
      preLoaderRoute: typeof AppRealEstateRouteLazyImport
      parentRoute: typeof AppImport
    }
    '/_app/settings': {
      id: '/_app/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof AppSettingsRouteLazyImport
      parentRoute: typeof AppImport
    }
  }
}

// Create and export the route tree

interface AppRouteChildren {
  AppDashboardRouteLazyRoute: typeof AppDashboardRouteLazyRoute
  AppHrRouteLazyRoute: typeof AppHrRouteLazyRoute
  AppLogoutRouteLazyRoute: typeof AppLogoutRouteLazyRoute
  AppRealEstateRouteLazyRoute: typeof AppRealEstateRouteLazyRoute
  AppSettingsRouteLazyRoute: typeof AppSettingsRouteLazyRoute
}

const AppRouteChildren: AppRouteChildren = {
  AppDashboardRouteLazyRoute: AppDashboardRouteLazyRoute,
  AppHrRouteLazyRoute: AppHrRouteLazyRoute,
  AppLogoutRouteLazyRoute: AppLogoutRouteLazyRoute,
  AppRealEstateRouteLazyRoute: AppRealEstateRouteLazyRoute,
  AppSettingsRouteLazyRoute: AppSettingsRouteLazyRoute,
}

const AppRouteWithChildren = AppRoute._addFileChildren(AppRouteChildren)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRouteLazyRoute
  '/sign-up': typeof SignUpRouteLazyRoute
  '/dashboard': typeof AppDashboardRouteLazyRoute
  '/hr': typeof AppHrRouteLazyRoute
  '/logout': typeof AppLogoutRouteLazyRoute
  '/real-estate': typeof AppRealEstateRouteLazyRoute
  '/settings': typeof AppSettingsRouteLazyRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRouteLazyRoute
  '/sign-up': typeof SignUpRouteLazyRoute
  '/dashboard': typeof AppDashboardRouteLazyRoute
  '/hr': typeof AppHrRouteLazyRoute
  '/logout': typeof AppLogoutRouteLazyRoute
  '/real-estate': typeof AppRealEstateRouteLazyRoute
  '/settings': typeof AppSettingsRouteLazyRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/_app': typeof AppRouteWithChildren
  '/sign-in': typeof SignInRouteLazyRoute
  '/sign-up': typeof SignUpRouteLazyRoute
  '/_app/dashboard': typeof AppDashboardRouteLazyRoute
  '/_app/hr': typeof AppHrRouteLazyRoute
  '/_app/logout': typeof AppLogoutRouteLazyRoute
  '/_app/real-estate': typeof AppRealEstateRouteLazyRoute
  '/_app/settings': typeof AppSettingsRouteLazyRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/hr'
    | '/logout'
    | '/real-estate'
    | '/settings'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/sign-in'
    | '/sign-up'
    | '/dashboard'
    | '/hr'
    | '/logout'
    | '/real-estate'
    | '/settings'
  id:
    | '__root__'
    | '/'
    | '/_app'
    | '/sign-in'
    | '/sign-up'
    | '/_app/dashboard'
    | '/_app/hr'
    | '/_app/logout'
    | '/_app/real-estate'
    | '/_app/settings'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  AppRoute: typeof AppRouteWithChildren
  SignInRouteLazyRoute: typeof SignInRouteLazyRoute
  SignUpRouteLazyRoute: typeof SignUpRouteLazyRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  AppRoute: AppRouteWithChildren,
  SignInRouteLazyRoute: SignInRouteLazyRoute,
  SignUpRouteLazyRoute: SignUpRouteLazyRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_app",
        "/sign-in",
        "/sign-up"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/_app": {
      "filePath": "_app.tsx",
      "children": [
        "/_app/dashboard",
        "/_app/hr",
        "/_app/logout",
        "/_app/real-estate",
        "/_app/settings"
      ]
    },
    "/sign-in": {
      "filePath": "sign-in/route.lazy.tsx"
    },
    "/sign-up": {
      "filePath": "sign-up/route.lazy.tsx"
    },
    "/_app/dashboard": {
      "filePath": "_app/dashboard/route.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/hr": {
      "filePath": "_app/hr/route.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/logout": {
      "filePath": "_app/logout/route.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/real-estate": {
      "filePath": "_app/real-estate/route.lazy.tsx",
      "parent": "/_app"
    },
    "/_app/settings": {
      "filePath": "_app/settings/route.lazy.tsx",
      "parent": "/_app"
    }
  }
}
ROUTE_MANIFEST_END */
